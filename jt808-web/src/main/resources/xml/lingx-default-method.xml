<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:context="http://www.springframework.org/schema/context"
  xsi:schemaLocation="http://www.springframework.org/schema/context 
 http://www.springframework.org/schema/context/spring-context-3.2.xsd 
 http://www.springframework.org/schema/beans 
 http://www.springframework.org/schema/beans/spring-beans-3.2.xsd">
 
 	
 	<!-- 单个对象查看方法 -->
 	<bean id="view" class="com.lingx.core.model.impl.DefaultMethod">
 		<property name="visible" value="false"></property>
 		<property name="code" value="view"></property>
		<property name="name" value="查看"></property>
		<property name="type" value="JSON"></property>
		<property name="validation" value="false"></property>
		<property name="viewUri" value="lingx/template/view.jsp"></property>
		<property name="executors" ref="viewNode"></property>
	</bean>
	<bean id="viewNode" class="com.lingx.core.model.impl.DefaultNode">
		<constructor-arg>
			<value>对象查看执行器</value>
		</constructor-arg>
		<property name="list">
			<list>
				<ref bean="viewExecutor"/>
			</list>
		</property>
	</bean>
	<bean id="viewExecutor" class="com.lingx.support.method.executor.GridQueryExecutor">
   	</bean>
   	<!-- 普通列表展示方法  -->
    <bean id="grid" class="com.lingx.core.model.impl.DefaultMethod">
    	<property name="visible" value="false"></property>
 		<property name="code" value="grid"></property>
		<property name="name" value="列表查看"></property>
		<property name="type" value="JSON"></property>
		<property name="validation" value="false"></property>
		<property name="viewUri" value="lingx/template/grid.jsp"></property>
		<property name="executors" ref="gridNode"></property>
	</bean>
	<bean id="gridNode" class="com.lingx.core.model.impl.DefaultNode">
		<constructor-arg>
			<value>列表展示执行器</value>
		</constructor-arg>
		<property name="list">
			<list>
				<ref bean="gridExecutor"/>
			</list>
		</property>
	</bean>
    <bean id="gridExecutor" class="com.lingx.support.method.executor.GridExecutor">
    	<property name="jdbcTemplate" ref="jdbcTemplate"></property>
    	<property name="queryService" ref="gridQueryService"></property>
    </bean>
    
 	<!-- 树形查看 -->
 	<bean id="tree" class="com.lingx.core.model.impl.DefaultMethod">
 		<property name="visible" value="false"></property>
 		<property name="code" value="tree"></property>
		<property name="name" value="树形查看"></property>
		<property name="type" value="JSON"></property>
		<property name="validation" value="false"></property>
		<property name="viewUri" value="lingx/template/tree.jsp"></property>
		<property name="executors" ref="treeNode"></property>
	</bean>
 	<bean id="treeNode" class="com.lingx.core.model.impl.DefaultNode">
		<constructor-arg>
			<value>树形查看执行器</value>
		</constructor-arg>
		<property name="list">
			<list>
				<ref bean="treeExecutor"/>
			</list>
		</property>
	</bean>
 	<bean id="treeExecutor" class="com.lingx.support.method.executor.TreeExecutor">
    	<property name="jdbcTemplate" ref="jdbcTemplate"></property>
    	<property name="queryService" ref="treeQueryService"></property>
    </bean>
    
 	<!-- 列表级联 -->
 	<bean id="grid_cascade" class="com.lingx.core.model.impl.DefaultMethod">
 		<property name="visible" value="false"></property>
 		<property name="code" value="grid_cascade"></property>
		<property name="name" value="列表级联"></property>
		<property name="type" value="JSON"></property>
		<property name="validation" value="false"></property>
		<property name="viewUri" value="lingx/template/grid_cascade.jsp"></property>
		<property name="executors" ref="gridCascadeNode"></property>
	</bean>
 	<bean id="gridCascadeNode" class="com.lingx.core.model.impl.DefaultNode">
		<constructor-arg>
			<value>列表级联执行器</value>
		</constructor-arg>
		<property name="list">
			<list>
				<ref bean="emptyExecutor"/>
			</list>
		</property>
	</bean>
 	<bean id="emptyExecutor" class="com.lingx.support.method.executor.EmptyExecutor">
    </bean>
 	<!-- 树形级联 -->
 	<bean id="tree_cascade" class="com.lingx.core.model.impl.DefaultMethod">
 		<property name="visible" value="false"></property>
 		<property name="code" value="tree_cascade"></property>
		<property name="name" value="树形级联"></property>
		<property name="type" value="JSON"></property>
		<property name="validation" value="false"></property>
		<property name="viewUri" value="lingx/template/tree_cascade.jsp"></property>
		<property name="executors" ref="treeCascadeNode"></property>
	</bean>
 	<bean id="treeCascadeNode" class="com.lingx.core.model.impl.DefaultNode">
		<constructor-arg>
			<value>树形级联执行器</value>
		</constructor-arg>
		<property name="list">
			<list>
				<ref bean="emptyExecutor"/>
			</list>
		</property>
	</bean>
 	<!-- 选择列表 -->
 	<bean id="combo" class="com.lingx.core.model.impl.DefaultMethod">
 		<property name="visible" value="false"></property>
 		<property name="code" value="combo"></property>
		<property name="name" value="选择列表"></property>
		<property name="type" value="JSON"></property>
		<property name="validation" value="false"></property>
		<property name="viewUri" value="lingx/template/grid.jsp"></property>
		<property name="executors" ref="comboNode"></property>
	</bean>
 	<bean id="comboNode" class="com.lingx.core.model.impl.DefaultNode">
		<constructor-arg>
			<value>列表展示执行器</value>
		</constructor-arg>
		<property name="list">
			<list>
				<ref bean="comboExecutor"/>
			</list>
		</property>
	</bean>
 	<bean id="comboExecutor" class="com.lingx.support.method.executor.ComboExecutor">
    	<property name="jdbcTemplate" ref="jdbcTemplate"></property>
    	<property name="queryService" ref="comboQueryService"></property>
    </bean>
    <!-- 多选列表展示方法  -->
    <bean id="combogrid2" class="com.lingx.core.model.impl.DefaultMethod">
    	<property name="visible" value="false"></property>
 		<property name="code" value="combogrid2"></property>
		<property name="name" value="多选列表对话框"></property>
		<property name="type" value="JSON"></property>
		<property name="validation" value="false"></property>
		<property name="viewUri" value="lingx/template/grid_combo2.jsp"></property>
		<property name="executors" ref="gridNode"></property>
	</bean>
	<!-- 多选树形查看 -->
 	<bean id="combotree2" class="com.lingx.core.model.impl.DefaultMethod">
 		<property name="visible" value="false"></property>
 		<property name="code" value="combotree2"></property>
		<property name="name" value="多选树形对话框"></property>
		<property name="type" value="JSON"></property>
		<property name="validation" value="false"></property>
		<property name="viewUri" value="lingx/template/tree_combo2.jsp"></property>
		<property name="executors" ref="treeNode"></property>
	</bean>
 	<!-- 查询列表展示方法 -->
 	<bean id="grid_query" class="com.lingx.core.model.impl.DefaultMethod">
 		<property name="visible" value="false"></property>
 		<property name="code" value="grid_query"></property>
		<property name="name" value="查询列表查看"></property>
		<property name="type" value="JSON"></property>
		<property name="validation" value="false"></property>
		<property name="viewUri" value="lingx/template/grid_query.jsp"></property>
		<property name="executors" ref="gridQueryNode"></property>
	</bean>
 	<bean id="gridQueryNode" class="com.lingx.core.model.impl.DefaultNode">
		<constructor-arg>
			<value>列表展示执行器</value>
		</constructor-arg>
		<property name="list">
			<list>
				<ref bean="gridQueryExecutor"/>
			</list>
		</property>
	</bean>
	<bean id="gridQueryExecutor" class="com.lingx.support.method.executor.GridQueryExecutor">
    	<property name="jdbcTemplate" ref="jdbcTemplate"></property>
    	<property name="queryService" ref="gridQueryService"></property>
    </bean>
    
 	
    <bean id="gridQueryService" class="com.lingx.core.service.impl.QueryServiceImpl">
    	<property name="conditions">
			<array>
				<ref bean="cascadeRuleCondition"/>
				<ref bean="extendCondition"/>
				<ref bean="ruleCondition"/>
				<ref bean="scopeCondition"/>
				<ref bean="sreachCondition"/>
				<ref bean="orderCondition"/>
				<ref bean="pageCondition"/>
    		</array>
    	</property>
    </bean>
    <bean id="treeQueryService" class="com.lingx.core.service.impl.QueryServiceImpl">
    	<property name="conditions">
			<array>
				<ref bean="cascadeRuleCondition"/>
				<ref bean="extendCondition"/>
				<ref bean="ruleCondition"/>
				<ref bean="scopeCondition"/>
				<ref bean="sreachCondition"/>
				<ref bean="orderCondition"/>
    		</array>
    	</property>
    </bean>
    <bean id="comboQueryService" class="com.lingx.core.service.impl.QueryServiceImpl">
    	<property name="conditions">
			<array>
				<ref bean="cascadeRuleCondition"/>
				<ref bean="extendCondition"/>
				<ref bean="ruleCondition"/>
				<ref bean="sreachCondition"/>
				<ref bean="scopeCondition"/>
				<ref bean="orderCondition"/>
    		</array>
    	</property>
    </bean>
    <!-- Excel导出方法 -->
    <bean id="import" class="com.lingx.core.model.impl.DefaultMethod">
 		<property name="visible" value="true"></property>
 		<property name="code" value="import"></property>
		<property name="name" value="导入"></property>
		<property name="prompt" value="Excel文件的第一行为模型属性，第二行开始为数据；只读取Sheet1。"></property>
		<property name="type" value="JSON"></property>
		<property name="iconCls" value="Tablego"></property>
		<property name="validation" value="false"></property>
		<property name="currentRow" value="false"></property>
		<property name="viewUri" value="lingx/template/edit.jsp"></property>
		<property name="executors" ref="importExecutors"></property>
		<property name="fields" ref="importFieldsNode"></property>
	</bean>
	<bean id="importFieldsNode" class="com.lingx.core.model.impl.DefaultNode">
		<constructor-arg>
			<value>属性</value>
		</constructor-arg>
		<property name="list">
			<list>
				<bean class="com.lingx.core.model.impl.DefaultField">
 					<property name="code" value="file"></property>
					<property name="name" value="文件"></property>
					<property name="isNotNull" value="true"></property>
					<property name="inputType" value="file"></property>
					<property name="inputOptions" value="URL"></property>
				</bean>
				<bean class="com.lingx.core.model.impl.DefaultField">
 					<property name="code" value="type"></property>
					<property name="name" value="操作"></property>
					<property name="isNotNull" value="true"></property>
					<property name="inputType" value="radio"></property>
					<property name="inputOptions" value="CZLX"></property>
					<property name="refEntity" value="tlingx_optionitem"></property>
					<property name="defaultValue" value="add"></property>
				</bean>
			</list>
		</property>
	</bean>
	<bean id="importExecutors" class="com.lingx.core.model.impl.DefaultNode">
		<constructor-arg>
			<value>列表展示执行器</value>
		</constructor-arg>
		<property name="list">
			<list>
				<ref bean="importExecutor"/>
			</list>
		</property>
	</bean>
	<bean id="importExecutor" class="com.lingx.support.method.executor.ImportExecutor">
    </bean>
 	<bean id="excel" class="com.lingx.core.model.impl.DefaultMethod">
 		<property name="visible" value="true"></property>
 		<property name="code" value="excel"></property>
		<property name="name" value="导出"></property>
		<property name="winStyle" value="readonly"></property>
		<property name="type" value="JSON"></property>
		<property name="iconCls" value="Pageexcel"></property>
		<property name="validation" value="false"></property>
		<property name="currentRow" value="false"></property>
		<property name="viewUri" value="lingx/template/download/excel.jsp"></property>
		<property name="executors" ref="viewNode"></property>
		<property name="fields" ref="emptyFieldsNode"></property>
	</bean>
	<bean id="emptyFieldsNode" class="com.lingx.core.model.impl.DefaultNode">
		<constructor-arg>
			<value>属性</value>
		</constructor-arg>
		<property name="list">
			<list>
				<bean class="com.lingx.core.model.impl.DefaultField"></bean>
			</list>
		</property>
	</bean>
	<!-- 高级查询  -->
 	<bean id="search" class="com.lingx.core.model.impl.DefaultMethod">
 		<property name="visible" value="false"></property>
 		<property name="code" value="search"></property>
		<property name="name" value="高级查询"></property>
		<property name="type" value="JSON"></property>
		<property name="validation" value="false"></property>
		<property name="viewUri" value="lingx/template/search.jsp"></property>
	</bean>
	
	<bean id="getExecutor" class="com.lingx.support.method.executor.GetExecutor">
    </bean>
    <bean id="getNode" class="com.lingx.core.model.impl.DefaultNode">
		<constructor-arg>
			<value>列表展示执行器</value>
		</constructor-arg>
		<property name="list">
			<list>
				<ref bean="getExecutor"/>
			</list>
		</property>
	</bean>
	<!-- 获取单记录  -->
 	<bean id="get" class="com.lingx.core.model.impl.DefaultMethod">
 		<property name="visible" value="false"></property>
 		<property name="code" value="search"></property>
		<property name="name" value="单条记录"></property>
		<property name="type" value="JSON"></property>
		<property name="validation" value="false"></property>
		<property name="executors" ref="getNode"></property>
	</bean>
</beans>
